on:
  push:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version of the Release'  
  
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - {GOOS: darwin,    GOARCH: amd64                 }
        - {GOOS: darwin,    GOARCH: arm64                 }
        - {GOOS: dragonfly, GOARCH: amd64                 }
        - {GOOS: freebsd,   GOARCH: 386                   }
        - {GOOS: freebsd,   GOARCH: amd64                 }
        - {GOOS: freebsd,   GOARCH: arm                   }
        - {GOOS: freebsd,   GOARCH: arm64                 }
        - {GOOS: illumos,   GOARCH: amd64                 }
        - {GOOS: linux,     GOARCH: 386                   }
        - {GOOS: linux,     GOARCH: amd64                 }
        - {GOOS: linux,     GOARCH: arm                   }
        - {GOOS: linux,     GOARCH: arm64                 }
        - {GOOS: linux,     GOARCH: ppc64                 }
        - {GOOS: linux,     GOARCH: ppc64le               }
        - {GOOS: linux,     GOARCH: mips                  }
        - {GOOS: linux,     GOARCH: mipsle                }
        - {GOOS: linux,     GOARCH: mips64                }
        - {GOOS: linux,     GOARCH: mips64le              }
        - {GOOS: linux,     GOARCH: riscv64               }
        - {GOOS: linux,     GOARCH: s390x                 }
        - {GOOS: netbsd,    GOARCH: 386                   }
        - {GOOS: netbsd,    GOARCH: amd64                 }
        - {GOOS: netbsd,    GOARCH: arm                   }
        - {GOOS: netbsd,    GOARCH: arm64                 }
        - {GOOS: openbsd,   GOARCH: 386                   }
        - {GOOS: openbsd,   GOARCH: amd64                 }
        - {GOOS: openbsd,   GOARCH: arm                   }
        - {GOOS: openbsd,   GOARCH: arm64                 }
        - {GOOS: plan9,     GOARCH: 386                   }
        - {GOOS: plan9,     GOARCH: amd64                 }
        - {GOOS: plan9,     GOARCH: arm                   }
        - {GOOS: solaris,   GOARCH: amd64                 }
        - {GOOS: windows,   GOARCH: 386,      suffix: .exe}
        - {GOOS: windows,   GOARCH: amd64,    suffix: .exe}
        - {GOOS: windows,   GOARCH: arm,      suffix: .exe}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '^1.16.0'
    - name: Build
      run: go build -o github-actions-act-runner-${{matrix.GOOS}}-${{matrix.GOARCH}}${{matrix.suffix}}
      env:
        GOOS: ${{matrix.GOOS}}
        GOARCH: ${{matrix.GOARCH}}
    - uses: actions/upload-artifact@v2
      with:
        name: binary-${{matrix.GOOS}}-${{matrix.GOARCH}}
        path: github-actions-act-runner-${{matrix.GOOS}}-${{matrix.GOARCH}}${{matrix.suffix}}
  publish-to-github:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event.inputs.version }}
    continue-on-error: true
    steps:
    - uses: actions/download-artifact@v2
      with:
        path: "artifacts"
    - uses: ncipollo/release-action@v1
      with:
        artifacts: "artifacts/**/*"
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.event.inputs.version }}
        commit: ${{ github.sha }}
  publish-to-deb-repo:
    needs: build
    # if: ${{ github.event.inputs.version }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - {os: debian, codename: buster, image_owner: }
          # - {os: debian, codename: buster, image_owner: i386/, labels: [i386,docker]}
          - {os: ubuntu, codename: focal, image_owner: }
          - {os: debian, codename: buster, image_owner: arm32v7/, labels: [arm,docker]}
    runs-on: ${{ (matrix.labels == '' && 'ubuntu-latest') || matrix.labels }}
    container: ${{ matrix.image_owner }}${{ matrix.os }}:${{ matrix.codename }}
    name: deploy deb - ${{ matrix.os }}:${{ matrix.codename }} ${{ matrix.arch }}
    steps:
    - uses: actions/download-artifact@v2
      with:
        path: "artifacts"
    - name: create deb package
      run: echo "arch = $(arch)"